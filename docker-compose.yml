version: '3.8'

services:
  # Simulated DCGM Exporter (we'll use a mock metrics server)
  dcgm-exporter-node1:
    image: prom/pushgateway:latest
    ports:
      - "9091:9091"
    environment:
      - NODE_ID=node-1
    networks:
      - telemetry-net

  dcgm-exporter-node2:
    image: prom/pushgateway:latest
    ports:
      - "9092:9091"
    environment:
      - NODE_ID=node-2
    networks:
      - telemetry-net

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=telemetry
      - POSTGRES_PASSWORD=telemetry123
      - POSTGRES_DB=gpu_telemetry
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - telemetry-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U telemetry"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - telemetry-net

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    networks:
      - telemetry-net
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9093 --list"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  telemetry-net:
    driver: bridge

volumes:
  postgres-data: